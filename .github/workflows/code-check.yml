on:
  pull_request:
  push:
    branches: [ main ]

name: Code checks

concurrency:
  group: ${{ github.workflow }}@${{ github.ref }}
  cancel-in-progress: true

jobs:
  formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2  # Version 4.2.2        
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@88dc2356392166efad76775c878094f4e83ff746  # Version 1.0.6
        with:
          toolchain: nightly-2025-05-09
          profile: minimal
          components: rustfmt
          override: true
      - name: Run cargo fmt
        uses: actions-rs/cargo@9e120dd99b0fbad1c065f686657e914e76bd7b72  # Version 1.0.1
        with:
          command: fmt
          args: --all --check
      - name: Install taplo CLI
        run: cargo install taplo-cli --locked --version 0.9.3
      - name: Run taplo lint
        run: taplo lint
      - name: Run taplo fmt
        run: taplo fmt --check          

  cargo-deny:
    name: Check cargo-deny rules
    # `cargo-deny` action is only supported on Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2  # Version 4.2.2
      - name: Run `cargo deny`
        uses: EmbarkStudios/cargo-deny-action@34899fc7ba81ca6268d5947a7a16b4649013fea1 # Version 2.0.11
        with:
          # All is set in the config file
          arguments:
          command-arguments: "--hide-inclusion-graph -c .cargo-deny.toml --show-stats -D warnings"

  features:
    name: Check packages feature combinations
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2  # Version 4.2.2
      - name: Install cargo-hack
        uses: taiki-e/install-action@5651179950649c44da31d346537e20c0534f0f25  # Version 2.49.35
        with:
          tool: cargo-hack
      - name: Set up Cargo cache
        uses: ./.github/actions/setup-cargo-cache
        with:
          key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}->${{ matrix.os }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run cargo-hack
        env:
          RISC0_SKIP_BUILD: true
          RUSTFLAGS: -D warnings
        run: cargo hack --feature-powerset --no-dev-deps check
      - name: Update Cargo cache
        if: success() || failure()
        uses: ./.github/actions/update-cargo-cache
        with:
          key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}->${{ matrix.os }}

  unused-deps:
    name: Check for unused dependencies
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2  # Version 4.2.2
      - name: Install cargo-machete
        uses: bnjbvr/cargo-machete@9f0895d780783da0089162cae9668f6ec6e896c4  # Version 0.8.0
        # This step also runs `cargo-machete` without the `--with-metadata` flag, which can trigger more false positives.
        # We ignore errors and run `cargo-machete` with the `--with-metadata` flag for the actual result.
        continue-on-error: true
      - name: Run cargo-machete
        run: cargo machete --with-metadata

  lints:
    name: Check Rust lints
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2  # Version 4.2.2
      - name: Set up Cargo cache
        uses: ./.github/actions/setup-cargo-cache
        with:
          key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}->${{ matrix.os }}
          github-token: ${{ secrets.GITHUB_TOKEN }}        
      - name: Run cargo clippy
        uses: actions-rs/cargo@9e120dd99b0fbad1c065f686657e914e76bd7b72  # Version 1.0.1
        with:
          command: clippy
          args: --all --all-targets --all-features -- -D warnings
      - name: Update Cargo cache
        if: success() || failure()
        uses: ./.github/actions/update-cargo-cache
        with:
          key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}->${{ matrix.os }}

  tests:
    name: Run test suite
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2  # Version 4.2.2
      - name: Set up Cargo cache
        uses: ./.github/actions/setup-cargo-cache
        with:
          key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}->${{ matrix.os }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Cargo test
        uses: actions-rs/cargo@9e120dd99b0fbad1c065f686657e914e76bd7b72  # Version 1.0.1
        with:
          command: test
          args: --all-targets --all-features
      - name: Update Cargo cache
        if: success() || failure()
        uses: ./.github/actions/update-cargo-cache
        with:
          key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}->${{ matrix.os }}